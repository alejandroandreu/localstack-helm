apiVersion: apps/v1
kind: Deployment
metadata:
  name: localstack
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: localstack
    app.kubernetes.io/version: {{ .Values.image.tag }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: localstack
      app.kubernetes.io/version: {{ .Values.image.tag }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: localstack
        app.kubernetes.io/version: {{ .Values.image.tag }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      {{- if eq (.Values.volume.persistenceEnabled | toString) "true" }}
      volumes:
      - name: localstack
        hostPath:
          path: {{ .Values.volume.hostPath.path }}
          type: {{ .Values.volume.hostPath.type }}
      {{- end }}
      containers:
      - name: localstack
        image: "{{ .Values.image.repository}}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: EDGE_PORT
          value: "{{ .Values.endpoint.edge.port }}"
        - name: PORT_WEB_UI
          value: "{{ .Values.endpoint.web.port }}"
        - name: DEFAULT_REGION
          value: "{{ .Values.defaultRegion }}"
      {{- if eq (.Values.volume.persistenceEnabled | toString) "true" }}
        - name: DATA_DIR
          value: "/tmp/localstack"
      {{- end }}
        ports:
        - containerPort: {{ .Values.endpoint.edge.port }}
        - containerPort: {{ .Values.endpoint.web.port }}
      {{- if eq (.Values.volume.persistenceEnabled | toString) "true" }}
        volumeMounts:
        - name: localstack
          mountPath: "/tmp/localstack"
      {{- end }}
